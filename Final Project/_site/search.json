[
  {
    "objectID": "graphs.html",
    "href": "graphs.html",
    "title": "Data Analysis",
    "section": "",
    "text": "Initially lets upload the data.\n\ndata &lt;- read.csv(file = \"/Users/user/Desktop/Final Project/vazgen.csv\")\n\n___________________________________________________________________________________________\nAnd now lets call libraries, which will help us to create graphs\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n✔ readr     2.1.5     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n___________________________________________________________________________________________\nAnd finally its time for graphs\nNow we know what is PM, and now lets watch some graphs abt it depending on temperature\n\n\ndata |&gt;\n  ggplot(mapping = aes(x = temperature, y = pm10, color = as.factor(direction)))+\n  geom_point() +  \n  facet_wrap(~direction , strip.position=\"bottom\") +\n  theme(legend.position=\"none\")+\n  scale_y_log10()+\n  labs(title = \"Number of PM10 in the air depending on Temperature\",\n    x  = \"Temperature(°C)\",\n       y = \"PM10\")\n\n\n\n\n\n\n\n\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\np &lt;- data |&gt;\n filter(direction == \"N\" | direction == \"S\" |direction == \"E\"|direction == \"W\")|&gt;\n  ggplot(mapping = aes(x = temperature, y = pm10,size = pm10, color = as.factor(direction))) +\n  geom_point(alpha = 0.3, show.legend = FALSE)+\n  scale_size(range = c(2, 12)) +\n  facet_wrap(~direction)+\n  theme(legend.position=\"none\")+\n  geom_smooth(color = \"#e9ecef\")+\n  labs(\n    title = \"Quantity of PM10 in the air\",\n    x = \"Temperature(°C)\",\n    y = \"PM10\"\n  ) \nggplotly(p)\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\nm &lt;- data |&gt;\n filter(direction == \"NE\" | direction == \"SE\" |direction == \"SW\"|direction == \"NW\")|&gt;\n  ggplot(mapping = aes(x = temperature, y = pm10,size = pm10, color = as.factor(direction))) +\n  geom_point(alpha = 0.2, show.legend = FALSE)+\n  scale_size(range = c(2, 12)) +\n  facet_wrap(~direction) +\n  theme(legend.position=\"none\")+\n  geom_smooth(color = \"#e9ecef\")+\n  labs(\n    title = \"Quantity of PM10 in the air\",\n    x = \"Temperature(°C)\",\n    y = \"PM10\"\n  ) \nggplotly(m)\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n___________________________________________________________________________________________\nThe 4th graph is abt the temperature during the year\n\nhist &lt;- data |&gt;\n  \n  select(temperature, pressure)|&gt;\n  ggplot(mapping = aes(x = temperature, fill = temperature))+\n  geom_histogram(binwidth = 0.3,color = \"white\", fill = \"#1b9aaa\")+\n\nscale_x_continuous(breaks = seq(-20, 50, by = 2))+\nscale_y_continuous(breaks = seq(0, 500, by = 20))+\n  labs(title = \"Temperature in Armenia\",\n       x = \"Temperature(°C)\",\n       y = \"Count\"\n       )\nggplotly(hist)\n\n\n\n\n\n___________________________________________________________________________________________\nThis graph is like the previous one, but this one is abt the pressure\n\nhist2 &lt;- data |&gt;\n  ggplot(mapping = aes(x = pressure, fill = pressure))+\n  geom_histogram(color = \"#d9d9d9\", fill = \"#3c6e71\", bins = 30)+\n  theme_minimal()+\n  theme_light()+\nscale_x_continuous(breaks = seq(600, 900, by = 25))+\nscale_y_continuous(breaks = seq(0, 10000, by = 1000))+ \n  labs(title = \"Pressure in Armenia\",\n       x = \"Pressure\",\n       y = \"Count\")\nggplotly(hist2)\n\n\n\n\n\n___________________________________________________________________________________________\nThis one is a density graph, which depends on direction\n\ndata|&gt;\n  ggplot(mapping = aes(x = direction))+\n  geom_density(aes(fill=factor(direction), alpha = 1))+\n  scale_y_continuous(breaks = seq(0, 2, by = 0.1))+\n  labs(title = \"The Density of Directions\",\n       x = \"Direction\",\n       y = \"Density\",\n       alpha = \"Alpha\",\n       fill = \"Colors of Directions\")\n\n\n\n\n\n\n\n\n___________________________________________________________________________________________\nHere’s another density graph depending on rain\n\ndata |&gt;\n  arrange(rain)|&gt;\n  select(time,rain)|&gt;\n  ggplot(mapping = aes(x = rain))+\n  labs(x = \"Rain\",\n       y = \"Density\",\n       alpha = \"Alpha\",\n       fill = \"Rain(mm)\")+\n  ggtitle(\"The density of the rain\")+\n  geom_density(aes(fill=factor(rain), alpha = 1))+\n  scale_x_continuous(breaks = seq(0, 5, by = 0.25))+\n  scale_y_continuous(breaks = seq(0, 5, by = 1))\n\n\n\n\n\n\n\n\n___________________________________________________________________________________________\nHere’s a box plot abt the speed of directions\n\ndata |&gt;\n  filter(speed &gt; 0.1 ) |&gt;\n  group_by(direction)|&gt;\n  select(direction, speed)|&gt;\n  ggplot(mapping = aes(x = direction, y = speed))+\n  geom_boxplot(alpha = 0.28, color = \"#1b9aaa\",fill = \"#06d6a0\")+\n  labs(title = \"Speed of Directions in November\",\n       x = \"Direction\",\n       y = \"Speed\")+\nscale_y_continuous(breaks = seq(0, 50, by = 1))\n\n\n\n\n\n\n\n\n___________________________________________________________________________________________\nAnd the last one.\nA correlogram of our data\n\nlibrary(ggcorrplot)\n\ndatabase &lt;- na.omit(data)\nnumeric_columns &lt;- sapply(database, is.numeric)\ncorr &lt;- round(cor(database[, numeric_columns]), 1)\n\nggcorrplot(corr, hc.order = TRUE, \n           type = \"lower\", \n           lab = TRUE, \n           lab_size = 3, \n           method = \"circle\", \n            colors = c(\"#a873e8\", \"#ebc2ff\", \"#56d1dc\"),\n           title = \"Correlogram of Our Dataset\", \n           ggtheme = theme_bw)"
  },
  {
    "objectID": "graphs.html#graphs",
    "href": "graphs.html#graphs",
    "title": "Data Analysis",
    "section": "",
    "text": "Initially lets upload the data.\n\ndata &lt;- read.csv(file = \"/Users/user/Desktop/Final Project/vazgen.csv\")\n\n___________________________________________________________________________________________\nAnd now lets call libraries, which will help us to create graphs\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n✔ readr     2.1.5     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n___________________________________________________________________________________________\nAnd finally its time for graphs\nNow we know what is PM, and now lets watch some graphs abt it depending on temperature\n\n\ndata |&gt;\n  ggplot(mapping = aes(x = temperature, y = pm10, color = as.factor(direction)))+\n  geom_point() +  \n  facet_wrap(~direction , strip.position=\"bottom\") +\n  theme(legend.position=\"none\")+\n  scale_y_log10()+\n  labs(title = \"Number of PM10 in the air depending on Temperature\",\n    x  = \"Temperature(°C)\",\n       y = \"PM10\")\n\n\n\n\n\n\n\n\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\np &lt;- data |&gt;\n filter(direction == \"N\" | direction == \"S\" |direction == \"E\"|direction == \"W\")|&gt;\n  ggplot(mapping = aes(x = temperature, y = pm10,size = pm10, color = as.factor(direction))) +\n  geom_point(alpha = 0.3, show.legend = FALSE)+\n  scale_size(range = c(2, 12)) +\n  facet_wrap(~direction)+\n  theme(legend.position=\"none\")+\n  geom_smooth(color = \"#e9ecef\")+\n  labs(\n    title = \"Quantity of PM10 in the air\",\n    x = \"Temperature(°C)\",\n    y = \"PM10\"\n  ) \nggplotly(p)\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\nm &lt;- data |&gt;\n filter(direction == \"NE\" | direction == \"SE\" |direction == \"SW\"|direction == \"NW\")|&gt;\n  ggplot(mapping = aes(x = temperature, y = pm10,size = pm10, color = as.factor(direction))) +\n  geom_point(alpha = 0.2, show.legend = FALSE)+\n  scale_size(range = c(2, 12)) +\n  facet_wrap(~direction) +\n  theme(legend.position=\"none\")+\n  geom_smooth(color = \"#e9ecef\")+\n  labs(\n    title = \"Quantity of PM10 in the air\",\n    x = \"Temperature(°C)\",\n    y = \"PM10\"\n  ) \nggplotly(m)\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n___________________________________________________________________________________________\nThe 4th graph is abt the temperature during the year\n\nhist &lt;- data |&gt;\n  \n  select(temperature, pressure)|&gt;\n  ggplot(mapping = aes(x = temperature, fill = temperature))+\n  geom_histogram(binwidth = 0.3,color = \"white\", fill = \"#1b9aaa\")+\n\nscale_x_continuous(breaks = seq(-20, 50, by = 2))+\nscale_y_continuous(breaks = seq(0, 500, by = 20))+\n  labs(title = \"Temperature in Armenia\",\n       x = \"Temperature(°C)\",\n       y = \"Count\"\n       )\nggplotly(hist)\n\n\n\n\n\n___________________________________________________________________________________________\nThis graph is like the previous one, but this one is abt the pressure\n\nhist2 &lt;- data |&gt;\n  ggplot(mapping = aes(x = pressure, fill = pressure))+\n  geom_histogram(color = \"#d9d9d9\", fill = \"#3c6e71\", bins = 30)+\n  theme_minimal()+\n  theme_light()+\nscale_x_continuous(breaks = seq(600, 900, by = 25))+\nscale_y_continuous(breaks = seq(0, 10000, by = 1000))+ \n  labs(title = \"Pressure in Armenia\",\n       x = \"Pressure\",\n       y = \"Count\")\nggplotly(hist2)\n\n\n\n\n\n___________________________________________________________________________________________\nThis one is a density graph, which depends on direction\n\ndata|&gt;\n  ggplot(mapping = aes(x = direction))+\n  geom_density(aes(fill=factor(direction), alpha = 1))+\n  scale_y_continuous(breaks = seq(0, 2, by = 0.1))+\n  labs(title = \"The Density of Directions\",\n       x = \"Direction\",\n       y = \"Density\",\n       alpha = \"Alpha\",\n       fill = \"Colors of Directions\")\n\n\n\n\n\n\n\n\n___________________________________________________________________________________________\nHere’s another density graph depending on rain\n\ndata |&gt;\n  arrange(rain)|&gt;\n  select(time,rain)|&gt;\n  ggplot(mapping = aes(x = rain))+\n  labs(x = \"Rain\",\n       y = \"Density\",\n       alpha = \"Alpha\",\n       fill = \"Rain(mm)\")+\n  ggtitle(\"The density of the rain\")+\n  geom_density(aes(fill=factor(rain), alpha = 1))+\n  scale_x_continuous(breaks = seq(0, 5, by = 0.25))+\n  scale_y_continuous(breaks = seq(0, 5, by = 1))\n\n\n\n\n\n\n\n\n___________________________________________________________________________________________\nHere’s a box plot abt the speed of directions\n\ndata |&gt;\n  filter(speed &gt; 0.1 ) |&gt;\n  group_by(direction)|&gt;\n  select(direction, speed)|&gt;\n  ggplot(mapping = aes(x = direction, y = speed))+\n  geom_boxplot(alpha = 0.28, color = \"#1b9aaa\",fill = \"#06d6a0\")+\n  labs(title = \"Speed of Directions in November\",\n       x = \"Direction\",\n       y = \"Speed\")+\nscale_y_continuous(breaks = seq(0, 50, by = 1))\n\n\n\n\n\n\n\n\n___________________________________________________________________________________________\nAnd the last one.\nA correlogram of our data\n\nlibrary(ggcorrplot)\n\ndatabase &lt;- na.omit(data)\nnumeric_columns &lt;- sapply(database, is.numeric)\ncorr &lt;- round(cor(database[, numeric_columns]), 1)\n\nggcorrplot(corr, hc.order = TRUE, \n           type = \"lower\", \n           lab = TRUE, \n           lab_size = 3, \n           method = \"circle\", \n            colors = c(\"#a873e8\", \"#ebc2ff\", \"#56d1dc\"),\n           title = \"Correlogram of Our Dataset\", \n           ggtheme = theme_bw)"
  },
  {
    "objectID": "sources.html",
    "href": "sources.html",
    "title": "Sources",
    "section": "",
    "text": "The main and the only source is the webpage of climate net:\nhttps://climatenet.am/en/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Also we know air quality is a big matter not only for Armenia, but also for the entire world. And bcs of that I decided to make a project abt this. Nowadays we know the air is very polluted and we have to do smth for us, for our health. Bcs of that we have to know a little abt this topics:\n\nWhat is a PM?\nWhat can we do to make the air clearer?\n________________________________________________________________________________________\n\nAnd now lets talk abt the PM\nIt refers to a mixture of solid particles and liquid droplets found in the air. These particles can vary in size, composition, and origin, and they can be classified based on their aerodynamic diameter:\n\nPM10: Particles with a diameter of 10 micrometers (µm) or smaller. These particles are small enough to be inhaled into the respiratory system and can include dust, pollen, mold spores, and some larger particles from combustion processes.\nPM2.5: Particles with a diameter of 2.5 micrometers (µm) or smaller. These are fine particles that can penetrate deep into the lungs and even enter the bloodstream. They often originate from combustion sources such as vehicle engines, power plants, and wildfires, as well as from industrial processes and certain chemical reactions in the atmosphere.\nPM1.0: Particles with a diameter of 1.0 micrometer (µm) or smaller. These are ultrafine particles that can penetrate deeply into the respiratory system and pose significant health risks due to their ability to reach the smallest airways and potentially enter the bloodstream.\n________________________________________________________________________________________\nLet’s watch some graphs abt pm1.0 depending on temperature\n\ndata &lt;- read.csv(file = \"/Users/user/Desktop/Final Project/vazgen.csv\")\nlibrary(ggplot2)\ndata |&gt;\n  ggplot(mapping = aes(x = temperature, y = pm1, color = as.factor(direction)))+\n  geom_point() +  \n  facet_wrap(~direction , strip.position=\"bottom\") +\n  theme(legend.position=\"none\")+\n  scale_y_log10()+\n  labs(title = \"Number of PM1.0 in the air depending on Temperature\",\n    x  = \"Temperature(°C)\",\n       y = \"PM1.0\")\n\n\n\n\n\n\n\n\n________________________________________________________________________________________\nThere’ s also 1 big matter:\nWhat can we do to make the air clearer?\n\nPlant Trees: Trees and vegetation help absorb pollutants and improve air quality. Support tree planting initiatives in your community.\nSupport Clean Energy: Advocate for and support the use of renewable energy sources like wind, solar, and hydroelectric power.\nReduce Wood Burning: Avoid using wood-burning stoves or fireplaces, especially during high pollution days.\nDrive Efficiently: Avoid aggressive driving (rapid acceleration and braking), which can increase fuel consumption and emissions.\nReduce Waste: Properly dispose of waste and recycle to minimize landfill emissions and reduce methane production."
  },
  {
    "objectID": "index.html#air-quality-in-armenia",
    "href": "index.html#air-quality-in-armenia",
    "title": "Home",
    "section": "",
    "text": "Also we know air quality is a big matter not only for Armenia, but also for the entire world. And bcs of that I decided to make a project abt this. Nowadays we know the air is very polluted and we have to do smth for us, for our health. Bcs of that we have to know a little abt this topics:\n\nWhat is a PM?\nWhat can we do to make the air clearer?\n________________________________________________________________________________________\n\nAnd now lets talk abt the PM\nIt refers to a mixture of solid particles and liquid droplets found in the air. These particles can vary in size, composition, and origin, and they can be classified based on their aerodynamic diameter:\n\nPM10: Particles with a diameter of 10 micrometers (µm) or smaller. These particles are small enough to be inhaled into the respiratory system and can include dust, pollen, mold spores, and some larger particles from combustion processes.\nPM2.5: Particles with a diameter of 2.5 micrometers (µm) or smaller. These are fine particles that can penetrate deep into the lungs and even enter the bloodstream. They often originate from combustion sources such as vehicle engines, power plants, and wildfires, as well as from industrial processes and certain chemical reactions in the atmosphere.\nPM1.0: Particles with a diameter of 1.0 micrometer (µm) or smaller. These are ultrafine particles that can penetrate deeply into the respiratory system and pose significant health risks due to their ability to reach the smallest airways and potentially enter the bloodstream.\n________________________________________________________________________________________\n\ndata &lt;- read.csv(file = \"/Users/user/Desktop/Final Project/vazgen.csv\")\nlibrary(ggplot2)\ndata |&gt;\n  ggplot(mapping = aes(x = temperature, y = pm10, color = as.factor(direction)))+\n  geom_point() +  \n  facet_wrap(~direction , strip.position=\"bottom\") +\n  theme(legend.position=\"none\")+\n  scale_y_log10()+\n  labs(title = \"Number of PM10 in the air depending on Temperature\",\n    x  = \"Temperature\",\n       y = \"PM10\")\n\n\n\n\n\n\n\n\n________________________________________________________________________________________\nThere’ s also 1 big matter:\nWhat can we do to make the air clearer?\n\nPlant Trees: Trees and vegetation help absorb pollutants and improve air quality. Support tree planting initiatives in your community.\nSupport Clean Energy: Advocate for and support the use of renewable energy sources like wind, solar, and hydroelectric power.\nReduce Wood Burning: Avoid using wood-burning stoves or fireplaces, especially during high pollution days.\nDrive Efficiently: Avoid aggressive driving (rapid acceleration and braking), which can increase fuel consumption and emissions.\nReduce Waste: Properly dispose of waste and recycle to minimize landfill emissions and reduce methane production."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This webpage is my final project for a workshop in TUMO called “Discovering Climate Change with Data Science” led by Christopher Patvakanian. Here u can find some information and graphs abt air quality."
  },
  {
    "objectID": "about.html#about-webpage",
    "href": "about.html#about-webpage",
    "title": "About",
    "section": "",
    "text": "This webpage is my final project for a workshop in TUMO called “Discovering Climate Change with Data Science” led by Christopher Patvakanian. Here u can find some information and graphs abt air quality."
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About",
    "section": "About me",
    "text": "About me\nHi :) My name is Hovhannes Meghruni. I’m a college student who enjoys coding in my free time. I’m learning python and R currently and hope to broaden my knowledge about programming languages."
  },
  {
    "objectID": "index.html#how-air-purity-can-be-changed-depending-on-certain-conditions",
    "href": "index.html#how-air-purity-can-be-changed-depending-on-certain-conditions",
    "title": "Home",
    "section": "",
    "text": "Also we know air quality is a big matter not only for Armenia, but also for the entire world. And bcs of that I decided to make a project abt this. Nowadays we know the air is very polluted and we have to do smth for us, for our health. Bcs of that we have to know a little abt this topics:\n\nWhat is a PM?\nWhat can we do to make the air clearer?\n________________________________________________________________________________________\n\nAnd now lets talk abt the PM\nIt refers to a mixture of solid particles and liquid droplets found in the air. These particles can vary in size, composition, and origin, and they can be classified based on their aerodynamic diameter:\n\nPM10: Particles with a diameter of 10 micrometers (µm) or smaller. These particles are small enough to be inhaled into the respiratory system and can include dust, pollen, mold spores, and some larger particles from combustion processes.\nPM2.5: Particles with a diameter of 2.5 micrometers (µm) or smaller. These are fine particles that can penetrate deep into the lungs and even enter the bloodstream. They often originate from combustion sources such as vehicle engines, power plants, and wildfires, as well as from industrial processes and certain chemical reactions in the atmosphere.\nPM1.0: Particles with a diameter of 1.0 micrometer (µm) or smaller. These are ultrafine particles that can penetrate deeply into the respiratory system and pose significant health risks due to their ability to reach the smallest airways and potentially enter the bloodstream.\n________________________________________________________________________________________\nLet’s watch some graphs abt pm1.0 depending on temperature\n\ndata &lt;- read.csv(file = \"/Users/user/Desktop/Final Project/vazgen.csv\")\nlibrary(ggplot2)\ndata |&gt;\n  ggplot(mapping = aes(x = temperature, y = pm1, color = as.factor(direction)))+\n  geom_point() +  \n  facet_wrap(~direction , strip.position=\"bottom\") +\n  theme(legend.position=\"none\")+\n  scale_y_log10()+\n  labs(title = \"Number of PM1.0 in the air depending on Temperature\",\n    x  = \"Temperature(°C)\",\n       y = \"PM1.0\")\n\n\n\n\n\n\n\n\n________________________________________________________________________________________\nThere’ s also 1 big matter:\nWhat can we do to make the air clearer?\n\nPlant Trees: Trees and vegetation help absorb pollutants and improve air quality. Support tree planting initiatives in your community.\nSupport Clean Energy: Advocate for and support the use of renewable energy sources like wind, solar, and hydroelectric power.\nReduce Wood Burning: Avoid using wood-burning stoves or fireplaces, especially during high pollution days.\nDrive Efficiently: Avoid aggressive driving (rapid acceleration and braking), which can increase fuel consumption and emissions.\nReduce Waste: Properly dispose of waste and recycle to minimize landfill emissions and reduce methane production."
  }
]